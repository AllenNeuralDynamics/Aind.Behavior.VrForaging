//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.9.0.0 (Newtonsoft.Json v9.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace AindVrForagingDataSchema
{
    #pragma warning disable // Disable all warnings

    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class VirtualSite
    {
    
        private double _length = 120D;
    
        private Metadata _metadata;
    
        private Odor _odor;
    
        private Render _render;
    
        private Reward _reward;
    
        private double _startPosition = 0D;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="length")]
        public double Length
        {
            get
            {
                return _length;
            }
            set
            {
                _length = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="metadata")]
        public Metadata Metadata
        {
            get
            {
                return _metadata;
            }
            set
            {
                _metadata = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="odor")]
        public Odor Odor
        {
            get
            {
                return _odor;
            }
            set
            {
                _odor = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="render")]
        public Render Render
        {
            get
            {
                return _render;
            }
            set
            {
                _render = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="reward")]
        public Reward Reward
        {
            get
            {
                return _reward;
            }
            set
            {
                _reward = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="startPosition")]
        public double StartPosition
        {
            get
            {
                return _startPosition;
            }
            set
            {
                _startPosition = value;
            }
        }
    
        public System.IObservable<VirtualSite> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new VirtualSite
                {
                    Length = _length,
                    Metadata = _metadata,
                    Odor = _odor,
                    Render = _render,
                    Reward = _reward,
                    StartPosition = _startPosition
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class CorridorSpecifications
    {
    
        private double _height = 40D;
    
        private double _id = 0D;
    
        private double _length = 120D;
    
        private double _startPosition = 0D;
    
        private Texture _texture;
    
        private double _width = 40D;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="height")]
        public double Height
        {
            get
            {
                return _height;
            }
            set
            {
                _height = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Id")]
        public double Id
        {
            get
            {
                return _id;
            }
            set
            {
                _id = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="length")]
        public double Length
        {
            get
            {
                return _length;
            }
            set
            {
                _length = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="startPosition")]
        public double StartPosition
        {
            get
            {
                return _startPosition;
            }
            set
            {
                _startPosition = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="texture")]
        public Texture Texture
        {
            get
            {
                return _texture;
            }
            set
            {
                _texture = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="width")]
        public double Width
        {
            get
            {
                return _width;
            }
            set
            {
                _width = value;
            }
        }
    
        public System.IObservable<CorridorSpecifications> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new CorridorSpecifications
                {
                    Height = _height,
                    Id = _id,
                    Length = _length,
                    StartPosition = _startPosition,
                    Texture = _texture,
                    Width = _width
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class SessionMetadata
    {
    
        private string _commitHash;
    
        private string _experiment;
    
        private Hardware _hardware;
    
        private string _notes = "";
    
        private double? _rngSeed;
    
        private string _rootPath;
    
        private string _subject;
    
        private string _version;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="commitHash")]
        public string CommitHash
        {
            get
            {
                return _commitHash;
            }
            set
            {
                _commitHash = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="experiment")]
        public string Experiment
        {
            get
            {
                return _experiment;
            }
            set
            {
                _experiment = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="hardware")]
        public Hardware Hardware
        {
            get
            {
                return _hardware;
            }
            set
            {
                _hardware = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="notes")]
        public string Notes
        {
            get
            {
                return _notes;
            }
            set
            {
                _notes = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="rngSeed")]
        public double? RngSeed
        {
            get
            {
                return _rngSeed;
            }
            set
            {
                _rngSeed = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="rootPath")]
        public string RootPath
        {
            get
            {
                return _rootPath;
            }
            set
            {
                _rootPath = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="subject")]
        public string Subject
        {
            get
            {
                return _subject;
            }
            set
            {
                _subject = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="version")]
        public string Version
        {
            get
            {
                return _version;
            }
            set
            {
                _version = value;
            }
        }
    
        public System.IObservable<SessionMetadata> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new SessionMetadata
                {
                    CommitHash = _commitHash,
                    Experiment = _experiment,
                    Hardware = _hardware,
                    Notes = _notes,
                    RngSeed = _rngSeed,
                    RootPath = _rootPath,
                    Subject = _subject,
                    Version = _version
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class TruncatedExponential
    {
    
        private double _maximum = 1D;
    
        private double _mean = 0.5D;
    
        private double _minimum = 0D;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="maximum")]
        public double Maximum
        {
            get
            {
                return _maximum;
            }
            set
            {
                _maximum = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="mean")]
        public double Mean
        {
            get
            {
                return _mean;
            }
            set
            {
                _mean = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="minimum")]
        public double Minimum
        {
            get
            {
                return _minimum;
            }
            set
            {
                _minimum = value;
            }
        }
    
        public System.IObservable<TruncatedExponential> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new TruncatedExponential
                {
                    Maximum = _maximum,
                    Mean = _mean,
                    Minimum = _minimum
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class TransitionMatrix
    {
    
        public System.IObservable<TransitionMatrix> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new TransitionMatrix
                {

                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class PatchStatistics
    {
    
        private string _label = "";
    
        private Odor _odorSpecifications;
    
        private Reward _rewardSpecifications;
    
        private int _stateIndex = 0;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="label")]
        public string Label
        {
            get
            {
                return _label;
            }
            set
            {
                _label = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="odorSpecifications")]
        public Odor OdorSpecifications
        {
            get
            {
                return _odorSpecifications;
            }
            set
            {
                _odorSpecifications = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="rewardSpecifications")]
        public Reward RewardSpecifications
        {
            get
            {
                return _rewardSpecifications;
            }
            set
            {
                _rewardSpecifications = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="stateIndex")]
        public int StateIndex
        {
            get
            {
                return _stateIndex;
            }
            set
            {
                _stateIndex = value;
            }
        }
    
        public System.IObservable<PatchStatistics> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new PatchStatistics
                {
                    Label = _label,
                    OdorSpecifications = _odorSpecifications,
                    RewardSpecifications = _rewardSpecifications,
                    StateIndex = _stateIndex
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class AindVrForagingSession
    {
    
        private SessionMetadata _metadata = new SessionMetadata();
    
        private TaskLogicHelper _taskLogicHelper = new TaskLogicHelper();
    
        private EnvironmentStatistics _environmentStatistics;
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="metadata")]
        public SessionMetadata Metadata
        {
            get
            {
                return _metadata;
            }
            set
            {
                _metadata = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="taskLogicHelper")]
        public TaskLogicHelper TaskLogicHelper
        {
            get
            {
                return _taskLogicHelper;
            }
            set
            {
                _taskLogicHelper = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="environmentStatistics")]
        public EnvironmentStatistics EnvironmentStatistics
        {
            get
            {
                return _environmentStatistics;
            }
            set
            {
                _environmentStatistics = value;
            }
        }
    
        public System.IObservable<AindVrForagingSession> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new AindVrForagingSession
                {
                    Metadata = _metadata,
                    TaskLogicHelper = _taskLogicHelper,
                    EnvironmentStatistics = _environmentStatistics
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class Metadata
    {
    
        private double _id = 0D;
    
        private string _label = "virtualSite";
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="id")]
        public double Id
        {
            get
            {
                return _id;
            }
            set
            {
                _id = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="label")]
        public string Label
        {
            get
            {
                return _label;
            }
            set
            {
                _label = value;
            }
        }
    
        public System.IObservable<Metadata> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new Metadata
                {
                    Id = _id,
                    Label = _label
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class Odor
    {
    
        private double _concentration = 1D;
    
        private int _index;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="concentration")]
        public double Concentration
        {
            get
            {
                return _concentration;
            }
            set
            {
                _concentration = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="index")]
        public int Index
        {
            get
            {
                return _index;
            }
            set
            {
                _index = value;
            }
        }
    
        public System.IObservable<Odor> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new Odor
                {
                    Concentration = _concentration,
                    Index = _index
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class Render
    {
    
        private double? _brightness;
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="brightness")]
        public double? Brightness
        {
            get
            {
                return _brightness;
            }
            set
            {
                _brightness = value;
            }
        }
    
        public System.IObservable<Render> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new Render
                {
                    Brightness = _brightness
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class Reward
    {
    
        private double _amount;
    
        private double _delay = 0D;
    
        private OperantLogic _operantLogic;
    
        private double _probability = 1D;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="amount")]
        public double Amount
        {
            get
            {
                return _amount;
            }
            set
            {
                _amount = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="delay")]
        public double Delay
        {
            get
            {
                return _delay;
            }
            set
            {
                _delay = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="operantLogic")]
        public OperantLogic OperantLogic
        {
            get
            {
                return _operantLogic;
            }
            set
            {
                _operantLogic = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="probability")]
        public double Probability
        {
            get
            {
                return _probability;
            }
            set
            {
                _probability = value;
            }
        }
    
        public System.IObservable<Reward> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new Reward
                {
                    Amount = _amount,
                    Delay = _delay,
                    OperantLogic = _operantLogic,
                    Probability = _probability
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class Texture
    {
    
        private string _name = "default";
    
        private TextureSize _textureSize;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="name")]
        public string Name
        {
            get
            {
                return _name;
            }
            set
            {
                _name = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="textureSize")]
        public TextureSize TextureSize
        {
            get
            {
                return _textureSize;
            }
            set
            {
                _textureSize = value;
            }
        }
    
        public System.IObservable<Texture> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new Texture
                {
                    Name = _name,
                    TextureSize = _textureSize
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class Hardware
    {
    
        private Screen _screen;
    
        private Treadmill _treadmill;
    
        private Valves _valves;
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="screen")]
        public Screen Screen
        {
            get
            {
                return _screen;
            }
            set
            {
                _screen = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="treadmill")]
        public Treadmill Treadmill
        {
            get
            {
                return _treadmill;
            }
            set
            {
                _treadmill = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="valves")]
        public Valves Valves
        {
            get
            {
                return _valves;
            }
            set
            {
                _valves = value;
            }
        }
    
        public System.IObservable<Hardware> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new Hardware
                {
                    Screen = _screen,
                    Treadmill = _treadmill,
                    Valves = _valves
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class TaskLogicHelper
    {
    
        private VirtualSiteGeneration _virtualSiteGeneration = new VirtualSiteGeneration();
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="virtualSiteGeneration")]
        public VirtualSiteGeneration VirtualSiteGeneration
        {
            get
            {
                return _virtualSiteGeneration;
            }
            set
            {
                _virtualSiteGeneration = value;
            }
        }
    
        public System.IObservable<TaskLogicHelper> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new TaskLogicHelper
                {
                    VirtualSiteGeneration = _virtualSiteGeneration
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class EnvironmentStatistics
    {
    
        private TransitionMatrix _transitionMatrix;
    
        private System.Collections.Generic.List<PatchStatistics> _patches = new System.Collections.Generic.List<PatchStatistics>();
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="transitionMatrix")]
        public TransitionMatrix TransitionMatrix
        {
            get
            {
                return _transitionMatrix;
            }
            set
            {
                _transitionMatrix = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="patches")]
        public System.Collections.Generic.List<PatchStatistics> Patches
        {
            get
            {
                return _patches;
            }
            set
            {
                _patches = value;
            }
        }
    
        public System.IObservable<EnvironmentStatistics> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new EnvironmentStatistics
                {
                    TransitionMatrix = _transitionMatrix,
                    Patches = _patches
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class OperantLogic
    {
    
        private bool _isOperant = true;
    
        private double _stopDuration = 0D;
    
        private double _timeToCollect = 1000000D;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="isOperant")]
        public bool IsOperant
        {
            get
            {
                return _isOperant;
            }
            set
            {
                _isOperant = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="stopDuration")]
        public double StopDuration
        {
            get
            {
                return _stopDuration;
            }
            set
            {
                _stopDuration = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="timeToCollect")]
        public double TimeToCollect
        {
            get
            {
                return _timeToCollect;
            }
            set
            {
                _timeToCollect = value;
            }
        }
    
        public System.IObservable<OperantLogic> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new OperantLogic
                {
                    IsOperant = _isOperant,
                    StopDuration = _stopDuration,
                    TimeToCollect = _timeToCollect
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class TextureSize
    {
    
        private double _x = 40D;
    
        private double _y = 40D;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="x")]
        public double X
        {
            get
            {
                return _x;
            }
            set
            {
                _x = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="y")]
        public double Y
        {
            get
            {
                return _y;
            }
            set
            {
                _y = value;
            }
        }
    
        public System.IObservable<TextureSize> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new TextureSize
                {
                    X = _x,
                    Y = _y
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class Screen
    {
    
        private InitialAgentPosition _initialAgentPosition;
    
        private string _monitorCalibrationDirectory = "Calibration\\Monitors\\";
    
        private string _textureAssetDirectory = "Textures";
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="initialAgentPosition")]
        public InitialAgentPosition InitialAgentPosition
        {
            get
            {
                return _initialAgentPosition;
            }
            set
            {
                _initialAgentPosition = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="monitorCalibrationDirectory")]
        public string MonitorCalibrationDirectory
        {
            get
            {
                return _monitorCalibrationDirectory;
            }
            set
            {
                _monitorCalibrationDirectory = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="textureAssetDirectory")]
        public string TextureAssetDirectory
        {
            get
            {
                return _textureAssetDirectory;
            }
            set
            {
                _textureAssetDirectory = value;
            }
        }
    
        public System.IObservable<Screen> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new Screen
                {
                    InitialAgentPosition = _initialAgentPosition,
                    MonitorCalibrationDirectory = _monitorCalibrationDirectory,
                    TextureAssetDirectory = _textureAssetDirectory
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class Treadmill
    {
    
        private double _gain = 1D;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="gain")]
        public double Gain
        {
            get
            {
                return _gain;
            }
            set
            {
                _gain = value;
            }
        }
    
        public System.IObservable<Treadmill> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new Treadmill
                {
                    Gain = _gain
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class Valves
    {
    
        private string _calibrationDir = "Calibration\\Valves\\";
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="calibrationDir")]
        public string CalibrationDir
        {
            get
            {
                return _calibrationDir;
            }
            set
            {
                _calibrationDir = value;
            }
        }
    
        public System.IObservable<Valves> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new Valves
                {
                    CalibrationDir = _calibrationDir
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class VirtualSiteGeneration
    {
    
        private InterPatchSite _interPatchSite;
    
        private RewardSite _rewardSite;
    
        private GapSite _gapSite;
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="interPatchSite")]
        public InterPatchSite InterPatchSite
        {
            get
            {
                return _interPatchSite;
            }
            set
            {
                _interPatchSite = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="rewardSite")]
        public RewardSite RewardSite
        {
            get
            {
                return _rewardSite;
            }
            set
            {
                _rewardSite = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="gapSite")]
        public GapSite GapSite
        {
            get
            {
                return _gapSite;
            }
            set
            {
                _gapSite = value;
            }
        }
    
        public System.IObservable<VirtualSiteGeneration> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new VirtualSiteGeneration
                {
                    InterPatchSite = _interPatchSite,
                    RewardSite = _rewardSite,
                    GapSite = _gapSite
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class InitialAgentPosition
    {
    
        private double _x = 0D;
    
        private double _y = 0D;
    
        private double _z = 0D;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="x")]
        public double X
        {
            get
            {
                return _x;
            }
            set
            {
                _x = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="y")]
        public double Y
        {
            get
            {
                return _y;
            }
            set
            {
                _y = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="z")]
        public double Z
        {
            get
            {
                return _z;
            }
            set
            {
                _z = value;
            }
        }
    
        public System.IObservable<InitialAgentPosition> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new InitialAgentPosition
                {
                    X = _x,
                    Y = _y,
                    Z = _z
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class InterPatchSite
    {
    
        private TruncatedExponential _lengthDistribution;
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="lengthDistribution")]
        public TruncatedExponential LengthDistribution
        {
            get
            {
                return _lengthDistribution;
            }
            set
            {
                _lengthDistribution = value;
            }
        }
    
        public System.IObservable<InterPatchSite> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new InterPatchSite
                {
                    LengthDistribution = _lengthDistribution
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class RewardSite
    {
    
        private TruncatedExponential _lengthDistribution;
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="lengthDistribution")]
        public TruncatedExponential LengthDistribution
        {
            get
            {
                return _lengthDistribution;
            }
            set
            {
                _lengthDistribution = value;
            }
        }
    
        public System.IObservable<RewardSite> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new RewardSite
                {
                    LengthDistribution = _lengthDistribution
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class GapSite
    {
    
        private TruncatedExponential _lengthDistribution;
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="lengthDistribution")]
        public TruncatedExponential LengthDistribution
        {
            get
            {
                return _lengthDistribution;
            }
            set
            {
                _lengthDistribution = value;
            }
        }
    
        public System.IObservable<GapSite> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new GapSite
                {
                    LengthDistribution = _lengthDistribution
                }));
        }
    }


    /// <summary>
    /// Serializes a sequence of data model objects into YAML strings.
    /// </summary>
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Transform)]
    [System.ComponentModel.DescriptionAttribute("Serializes a sequence of data model objects into YAML strings.")]
    public partial class SerializeToYaml
    {
    
        private System.IObservable<string> Process<T>(System.IObservable<T> source)
        {
            return System.Reactive.Linq.Observable.Defer(() =>
            {
                var serializer = new YamlDotNet.Serialization.SerializerBuilder().Build();
                return System.Reactive.Linq.Observable.Select(source, value => serializer.Serialize(value)); 
            });
        }

        public System.IObservable<string> Process(System.IObservable<VirtualSite> source)
        {
            return Process<VirtualSite>(source);
        }

        public System.IObservable<string> Process(System.IObservable<CorridorSpecifications> source)
        {
            return Process<CorridorSpecifications>(source);
        }

        public System.IObservable<string> Process(System.IObservable<SessionMetadata> source)
        {
            return Process<SessionMetadata>(source);
        }

        public System.IObservable<string> Process(System.IObservable<TruncatedExponential> source)
        {
            return Process<TruncatedExponential>(source);
        }

        public System.IObservable<string> Process(System.IObservable<TransitionMatrix> source)
        {
            return Process<TransitionMatrix>(source);
        }

        public System.IObservable<string> Process(System.IObservable<PatchStatistics> source)
        {
            return Process<PatchStatistics>(source);
        }

        public System.IObservable<string> Process(System.IObservable<AindVrForagingSession> source)
        {
            return Process<AindVrForagingSession>(source);
        }

        public System.IObservable<string> Process(System.IObservable<Metadata> source)
        {
            return Process<Metadata>(source);
        }

        public System.IObservable<string> Process(System.IObservable<Odor> source)
        {
            return Process<Odor>(source);
        }

        public System.IObservable<string> Process(System.IObservable<Render> source)
        {
            return Process<Render>(source);
        }

        public System.IObservable<string> Process(System.IObservable<Reward> source)
        {
            return Process<Reward>(source);
        }

        public System.IObservable<string> Process(System.IObservable<Texture> source)
        {
            return Process<Texture>(source);
        }

        public System.IObservable<string> Process(System.IObservable<Hardware> source)
        {
            return Process<Hardware>(source);
        }

        public System.IObservable<string> Process(System.IObservable<TaskLogicHelper> source)
        {
            return Process<TaskLogicHelper>(source);
        }

        public System.IObservable<string> Process(System.IObservable<EnvironmentStatistics> source)
        {
            return Process<EnvironmentStatistics>(source);
        }

        public System.IObservable<string> Process(System.IObservable<OperantLogic> source)
        {
            return Process<OperantLogic>(source);
        }

        public System.IObservable<string> Process(System.IObservable<TextureSize> source)
        {
            return Process<TextureSize>(source);
        }

        public System.IObservable<string> Process(System.IObservable<Screen> source)
        {
            return Process<Screen>(source);
        }

        public System.IObservable<string> Process(System.IObservable<Treadmill> source)
        {
            return Process<Treadmill>(source);
        }

        public System.IObservable<string> Process(System.IObservable<Valves> source)
        {
            return Process<Valves>(source);
        }

        public System.IObservable<string> Process(System.IObservable<VirtualSiteGeneration> source)
        {
            return Process<VirtualSiteGeneration>(source);
        }

        public System.IObservable<string> Process(System.IObservable<InitialAgentPosition> source)
        {
            return Process<InitialAgentPosition>(source);
        }

        public System.IObservable<string> Process(System.IObservable<InterPatchSite> source)
        {
            return Process<InterPatchSite>(source);
        }

        public System.IObservable<string> Process(System.IObservable<RewardSite> source)
        {
            return Process<RewardSite>(source);
        }

        public System.IObservable<string> Process(System.IObservable<GapSite> source)
        {
            return Process<GapSite>(source);
        }
    }


    /// <summary>
    /// Deserializes a sequence of YAML strings into data model objects.
    /// </summary>
    [System.ComponentModel.DefaultPropertyAttribute("Type")]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Transform)]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<VirtualSite>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<CorridorSpecifications>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<SessionMetadata>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<TruncatedExponential>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<TransitionMatrix>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<PatchStatistics>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<AindVrForagingSession>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<Metadata>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<Odor>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<Render>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<Reward>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<Texture>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<Hardware>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<TaskLogicHelper>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<EnvironmentStatistics>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<OperantLogic>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<TextureSize>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<Screen>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<Treadmill>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<Valves>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<VirtualSiteGeneration>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<InitialAgentPosition>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<InterPatchSite>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<RewardSite>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<GapSite>))]
    [System.ComponentModel.DescriptionAttribute("Deserializes a sequence of YAML strings into data model objects.")]
    public partial class DeserializeFromYaml : Bonsai.Expressions.SingleArgumentExpressionBuilder
    {
    
        public DeserializeFromYaml()
        {
            Type = new Bonsai.Expressions.TypeMapping<AindVrForagingSession>();
        }

        public Bonsai.Expressions.TypeMapping Type { get; set; }

        public override System.Linq.Expressions.Expression Build(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments)
        {
            var typeMapping = (Bonsai.Expressions.TypeMapping)Type;
            var returnType = typeMapping.GetType().GetGenericArguments()[0];
            return System.Linq.Expressions.Expression.Call(
                typeof(DeserializeFromYaml),
                "Process",
                new System.Type[] { returnType },
                System.Linq.Enumerable.Single(arguments));
        }

        private static System.IObservable<T> Process<T>(System.IObservable<string> source)
        {
            return System.Reactive.Linq.Observable.Defer(() =>
            {
                var serializer = new YamlDotNet.Serialization.DeserializerBuilder().Build();
                return System.Reactive.Linq.Observable.Select(source, value =>
                {
                    var reader = new System.IO.StringReader(value);
                    var parser = new YamlDotNet.Core.MergingParser(new YamlDotNet.Core.Parser(reader));
                    return serializer.Deserialize<T>(parser);
                });
            });
        }
    }
}